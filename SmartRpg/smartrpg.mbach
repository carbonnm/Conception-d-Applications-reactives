eset Positions = { haut1, haut2, haut3, haut4, haut5, mihaut5, mihaut4, mihaut3, mihaut2, mihaut1, mibas1, mibas2, mibas3, mibas4, mibas5, bas5, bas4, bas3, bas2, bas1 }.
     Decors = { foret, montagne, volcan, desert }.
     NumeroDe = { de1, de2, de3, de4, de5, de6 }.
     CouleursLeds = { rouge, blanc, jaune }.
     EtatCoffre = { ouvert, ferme }.
     SensJoueur = { droit, reverse }.

eqn x_coord(haut1) = 150. y_coord(haut1) = 50.
    x_coord(haut2) = 514. y_coord(haut2) = 50.
    x_coord(haut3) = 878. y_coord(haut3) = 50.
    x_coord(haut4) = 1242.  y_coord(haut4) = 50.
    x_coord(haut5) = 1606.  y_coord(haut5) = 50.
    x_coord(mihaut1) = 150. y_coord(mihaut1) = 295.
    x_coord(mihaut2) = 514. y_coord(mihaut2) = 295.
    x_coord(mihaut3) = 878. y_coord(mihaut3) = 295.
    x_coord(mihaut4) = 1242. y_coord(mihaut4) = 295.
    x_coord(mihaut5) = 1606. y_coord(mihaut5) = 295.
    x_coord(mibas1) = 150. y_coord(mibas1) = 540.
    x_coord(mibas2) = 514. y_coord(mibas2) = 540.
    x_coord(mibas3) = 878. y_coord(mibas3) = 540.
    x_coord(mibas4) = 1242. y_coord(mibas4) = 540.
    x_coord(mibas5) = 1606. y_coord(mibas5) = 540.
    x_coord(bas1) = 150. y_coord(bas1) = 785.
    x_coord(bas2) = 514. y_coord(bas2) = 785.
    x_coord(bas3) = 878. y_coord(bas3) = 785.
    x_coord(bas4) = 1242. y_coord(bas4) = 785.
    x_coord(bas5) = 1606. y_coord(bas5) = 785.

    succ(haut1) = haut2. succ(haut2) = haut3. succ(haut3) = haut4. succ(haut4) = haut5. succ(haut5) = haut5.
    succ(mihaut1) = mihaut2. succ(mihaut2) = mihaut3. succ(mihaut3) = mihaut4. succ(mihaut4) = mihaut5. succ(mihaut5) = mihaut5.
    succ(mibas1) = mibas2. succ(mibas2) = mibas3. succ(mibas3) = mibas4. succ(mibas4) = mibas5. succ(mibas5) = mibas5.
    succ(bas1) = bas2. succ(bas2) = bas3. succ(bas3) = bas4. succ(bas4) = bas5. succ(bas5) = bas5.

    pred(haut1) = haut1. pred(haut2) = haut1. pred(haut3) = haut2. pred(haut4) = haut3. pred(haut5) = haut4.
    pred(mihaut1) = mihaut1. pred(mihaut2) = mihaut1. pred(mihaut3) = mihaut2. pred(mihaut4) = mihaut3. pred(mihaut5) = mihaut4.
    pred(mibas1) = mibas1. pred(mibas2) = mibas1. pred(mibas3) = mibas2. pred(mibas4) = mibas3. pred(mibas5) = mibas4.
    pred(bas1) = bas1. pred(bas2) = bas1. pred(bas3) = bas2. pred(bas4) = bas3. pred(bas5) = bas4.

    succv(haut1) = mihaut1. succv(haut2) = mihaut2. succv(haut3) = mihaut3. succv(haut4) = mihaut4. succv(haut5) = mihaut5.
    succv(mihaut1) = mibas1. succv(mihaut2) = mibas2. succv(mihaut3) = mibas3. succv(mihaut4) = mibas4. succv(mihaut5) = mibas5.
    succv(mibas1) = bas1. succv(mibas2) = bas2. succv(mibas3) = bas3. succv(mibas4) = bas4. succv(mibas5) = bas5.
    succv(bas1) = bas1. succv(bas2) = bas2. succv(bas3) = bas3. succv(bas4) = bas4. succv(bas5) = bas5.

    predv(haut1) = haut1. predv(haut2) = haut2. predv(haut3) = haut3. predv(haut4) = haut4. predv(haut5) = haut5.
    predv(mihaut1) = haut1. predv(mihaut2) = haut2. predv(mihaut3) = haut3. predv(mihaut4) = haut4. predv(mihaut5) = haut5. 
    predv(mibas1) = mihaut1. predv(mibas2) = mihaut2. predv(mibas3) = mihaut3. predv(mibas4) = mihaut4. predv(mibas5) = mihaut5.
    predv(bas1) = mibas1. predv(bas2) = mibas2. predv(bas3) = mibas3. predv(bas4) = mibas4. predv(bas5) = mibas5.

scene smartrpgScene = {
    size = (1920, 1080).
    layers = { top }.

    background = loadImage(Images/table.jpg).
    pion1_img = loadImage(Images/pion1.png).
    pion2_img = loadImage(Images/pion2.png).
    pion3_img = loadImage(Images/pion3.png).
    pion1Inverse_img = loadImage(Images/pion1reverse.png).
    pion2Inverse_img = loadImage(Images/pion2reverse.png).
    pion3Inverse_img = loadImage(Images/pion3reverse.png).
    desert_img = loadImage(Images/desert.png).
    foret_img = loadImage(Images/foret.png).
    montagne_img = loadImage(Images/montagne.png).
    volcan_img = loadImage(Images/volcan.png).
    de1_img = loadImage(Images/d1.PNG).
    de2_img = loadImage(Images/d2.PNG).
    de3_img = loadImage(Images/d3.PNG).
    de4_img = loadImage(Images/d4.PNG).
    de5_img = loadImage(Images/d5.PNG).
    de6_img = loadImage(Images/d6.PNG).
    rouge_img = loadImage(Images/led_purple.png).
    blanc_img = loadImage(Images/led_white.png).
    jaune_img = loadImage(Images/led_orange.png).
    coffreOuvert_img = loadImage(Images/coffreOuvert.png).
    coffreFerme_img = loadImage(Images/coffreFerme.png).


    widget decors = {
        attributes = { decor in Decors. }
        display = { 
            decor = foret -> foret_img.
            decor = montagne -> montagne_img.
            decor = desert -> desert_img.
            decor = volcan -> volcan_img.
         }
         init = {
            wdL = top.
            decor = foret.
         }
    }

    widget pion1 = {
        attributes = { sens in SensJoueur. }
        display = {
            sens = droit -> pion1_img.
            sens = reverse -> pion1Inverse_img.
         }
        init = { 
            wdL = top. 
            sens = reverse. 
        }
    }

    widget pion2 = {
        attributes = { sens in SensJoueur. }
        display = { 
            sens = droit -> pion2_img.
            sens = reverse -> pion2Inverse_img.
         }
        init = { 
            wdL = top. 
            sens = reverse.
        }
    }

    widget pion3 = {
        attributes = { sens in SensJoueur. }
        display = {
            sens = droit -> pion3_img.
            sens = reverse -> pion3Inverse_img.
         }
        init = { 
            wdL = top. 
            sens = droit.
        }
    }


    widget coffre = {
        attributes = { statut in EtatCoffre. }
        display = {
            statut = ouvert -> coffreOuvert_img.
            statut = ferme -> coffreFerme_img.
        }
        init = {
            wdL = top.
            statut = ferme.
        }
    }

    widget de = {
        attributes = { numero in NumeroDe. }
        display = {
            numero = de1 -> de1_img.
            numero = de2 -> de2_img.
            numero = de3 -> de3_img.
            numero = de4 -> de4_img.
            numero = de5 -> de5_img.
            numero = de6 -> de6_img.
        }
        init = {
            wdL = top.
            numero = de1.
        }
    }

    widget led = {
        attributes = { couleur in CouleursLeds. }
        display = {
            couleur = rouge -> rouge_img.
            couleur = blanc -> blanc_img.
            couleur = jaune -> jaune_img.
        }
        init = {
            wdL = top.
            couleur = blanc.
        }
    }
}. 

proc Pion1(p: Positions) =
        get(Pion1);
        RollDice;
        (
        (
        (
            nask(succ(p));
            tell(succ(p));
            (att(sens, pion1, smartrpgScene, reverse));
            move_to(pion1, smartrpgScene, x_coord(succ(p)), y_coord(succ(p)));
            get(p);

            (((succ(p) = mibas3) -> OpenCoffre) +
            (tell(Pion2);
            Pion1(succ(p))))
        )
        +
        (
            nask(pred(p));
            tell(pred(p));
            (att(sens, pion1, smartrpgScene, droit));
            move_to(pion1, smartrpgScene, x_coord(pred(p)), y_coord(pred(p)));
            get(p);

            (((pred(p) = mibas3) -> OpenCoffre) +
            (tell(Pion2);
            Pion1(pred(p))))
        )
        )
        +
        (
        (
            nask(succv(p));
            tell(succv(p));
            move_to(pion1, smartrpgScene, x_coord(succv(p)), y_coord(succv(p)));
            get(p);

            (((succv(p) = mibas3) -> OpenCoffre) +
            (tell(Pion2);
            Pion1(succv(p))))
        )
        +
        (
            nask(predv(p));
            tell(predv(p));
            move_to(pion1, smartrpgScene, x_coord(predv(p)), y_coord(predv(p)));
            get(p);

            (((predv(p) = mibas3) -> OpenCoffre) +
            (tell(Pion2);
            Pion1(predv(p))))
        )
        )
        +
        (
            move_to(pion1, smartrpgScene, x_coord(p), y_coord(p));
            tell(Pion2);
            Pion1(p)
        )).

    
    Pion2(p: Positions) = 
        get(Pion2);
        RollDice;
        (((
            nask(succ(p));
            tell(succ(p));
            (att(sens, pion2, smartrpgScene, reverse));
            move_to(pion2, smartrpgScene, x_coord(succ(p)), y_coord(succ(p)));
            get(p);

            (((succ(p) = mibas3) -> OpenCoffre) +
            (tell(Pion3);
            Pion2(succ(p))))
        )
        +
        (
            nask(pred(p));
            tell(pred(p));
            (att(sens, pion2, smartrpgScene, droit));
            move_to(pion2, smartrpgScene, x_coord(pred(p)), y_coord(pred(p)));
            get(p);

            (((pred(p) = mibas3) -> OpenCoffre) +
            (tell(Pion3);
            Pion2(pred(p))))
        ))
        +
        ((
            nask(succv(p));
            tell(succv(p));
            move_to(pion2, smartrpgScene, x_coord(succv(p)), y_coord(succv(p)));
            get(p);

            (((succv(p) = mibas3) -> OpenCoffre) +
            (tell(Pion3);
            Pion2(succv(p))))
        )
        +
        (
            nask(predv(p));
            tell(predv(p));
            move_to(pion2, smartrpgScene, x_coord(predv(p)), y_coord(predv(p)));
            get(p);

            (((predv(p) = mibas3) -> OpenCoffre) +
            (tell(Pion3);
            Pion2(predv(p))))
        )
        )
        +
        (
            move_to(pion2, smartrpgScene, x_coord(p), y_coord(p));
            tell(Pion3);
            Pion2(p)
        )).
    
    Pion3(p: Positions) =
        get(Pion3);
        RollDice;
        (((
            nask(succ(p));
            tell(succ(p));
            (att(sens, pion3, smartrpgScene, reverse));
            move_to(pion3, smartrpgScene, x_coord(succ(p)), y_coord(succ(p)));
            get(p);

            (((succ(p) = mibas3) -> OpenCoffre) +
            (tell(Pion1);
            Pion3(succ(p))))
        )
        +
        (
            nask(pred(p));
            tell(pred(p));
            (att(sens, pion3, smartrpgScene, droit));
            move_to(pion3, smartrpgScene, x_coord(pred(p)), y_coord(pred(p)));
            get(p);

            (((pred(p) = mibas3) -> OpenCoffre) +
            (tell(Pion1);
            Pion3(pred(p))))
        ))
        +
        ((
            nask(succv(p));
            tell(succv(p));
            move_to(pion3, smartrpgScene, x_coord(succv(p)), y_coord(succv(p)));
            get(p);

            (((succv(p) = mibas3) -> OpenCoffre) +
            (tell(Pion1);
            Pion3(succv(p))))
        )
        +
        (
            nask(predv(p));
            tell(predv(p));
            move_to(pion3, smartrpgScene, x_coord(predv(p)), y_coord(predv(p)));
            get(p);

            (((predv(p) = mibas3) -> OpenCoffre) +
            (tell(Pion1);
            Pion3(predv(p))))
        )
        )+
        (
            move_to(pion3, smartrpgScene, x_coord(p), y_coord(p));
            tell(Pion1);
            Pion3(p)
        )).
    

    ChangeDecor = 
        ((att(decor, decors, smartrpgScene, foret))
        +
        (att(decor, decors, smartrpgScene, montagne))
        +
        (att(decor, decors, smartrpgScene, volcan))
        +
        (att(decor, decors, smartrpgScene, desert)));
        ChangeDecor.


    OpenCoffre = 
        ask(mibas3);
        (att(statut, coffre, smartrpgScene, ouvert));
        tell(open).


    RollDice = 
        (
        (
            (
                (att(numero, de, smartrpgScene, de1)) ;
                show(de, smartrpgScene) ;
                (att(couleur, led, smartrpgScene, rouge))
            )
            +
            (
                (att(numero, de, smartrpgScene, de6));
                show(de, smartrpgScene) ;
                (att(couleur, led, smartrpgScene, jaune))
            )
        )
        +
        (
            (
                (
                    (att(numero, de, smartrpgScene, de2)) ;
                    show(de, smartrpgScene) ;
                    (att(couleur, led, smartrpgScene, blanc))
                )
                +
                (
                    (att(numero, de, smartrpgScene, de3)) ;
                    show(de, smartrpgScene) ;
                    (att(couleur, led, smartrpgScene, blanc))
            )   
            )
            +
            (
                (
                    (att(numero, de, smartrpgScene, de4)) ;
                    show(de, smartrpgScene) ;
                    (att(couleur, led, smartrpgScene, blanc))
                )
                +
                (
                    (att(numero, de, smartrpgScene, de5)) ;
                    show(de, smartrpgScene) ;
                    (att(couleur, led, smartrpgScene, blanc))
                )
            )
        )
        );
        hide(de, smartrpgScene).
        
    Init = draw_scene(smartrpgScene);
            place_at(decors, smartrpgScene, 0, 0);
            show(decors, smartrpgScene);

            place_at(led, smartrpgScene, 0, 0);
            show(led, smartrpgScene);

            place_at(de, smartrpgScene, 1675, 900);

            place_at(coffre, smartrpgScene, x_coord(mibas3), y_coord(mibas3));
            show(coffre, smartrpgScene);

            place_at(pion1, smartrpgScene, x_coord(haut1), y_coord(haut1));
            place_at(pion2, smartrpgScene, x_coord(bas1), y_coord(bas1));
            place_at(pion3, smartrpgScene, x_coord(haut5), y_coord(haut5));
            show(pion1, smartrpgScene);
            show(pion2, smartrpgScene);
            show(pion3, smartrpgScene);
            tell(haut1);
            tell(bas1);
            tell(haut5);

            tell(Pion1);
            
            Main(haut1, bas1, haut5).

    Main(p1: Positions, p2: Positions, p3: Positions) =
            (
                (
                    Pion1(p1) ||
                    Pion2(p2)
                ) ||
                Pion3(p3)
            ) ||
            ChangeDecor.